{"version":3,"sources":["images/header__logo_large.svg","components/Header.js","contexts/CurrentUserContext.js","components/Card.js","images/profile__image.jpg","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/ImagePopup.js","utils/api.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","className","src","logo","alt","CurrentUserContext","createContext","Card","data","onCardClick","onCardLike","onCardDelete","id","useContext","_id","isOwn","owner","isLiked","likes","some","like","type","onClick","link","name","length","Main","onEditProfileClick","onAddPlaceClick","onEditAvatarClick","cardsList","React","avatar","about","avatarImage","map","card","Footer","PopupWithForm","props","title","buttonText","isOpen","onClose","onSubmit","useState","currentButtonText","setCurrentButtonText","e","target","classList","contains","preventDefault","then","children","EditProfilePopup","formName","currentName","currentAbout","setName","setAbout","onInputChange","value","useEffect","placeholder","minLength","maxLength","required","onChange","EditAvatarPopup","setLink","inputRef","useRef","ref","current","AddPlacePopup","handleChange","ImagePopup","Api","host","authorization","this","_host","_headers","userId","undefined","res","ok","json","Promise","reject","status","statusText","fetch","headers","_handleResponse","method","body","JSON","stringify","api","App","currentUser","setCurrentUser","cards","setCards","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","cardId","confirmPopupState","setConfirmPopupState","selectedCard","setSelectedCard","closeAllPopups","updateCards","getCards","catch","console","log","updateUserInfo","getUserInfo","handleEscapeClose","key","document","addEventListener","removeEventListener","Provider","removeLike","addLike","updateUser","addCard","updateUserAvatar","deleteCard","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d3634ded.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/header__logo_large.4e8e0a1d.svg\";","import logo from '../images/header__logo_large.svg';\n\nfunction Header() {\n    return (\n        <header className=\"header\">\n            <img className=\"header__logo\" src={logo} alt='Around the U.S. logo' />\n        </header>\n    );\n}\n\nexport default Header;\n","import { createContext } from \"react\";\n\nexport const CurrentUserContext = createContext();\n","import { useContext } from 'react';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\n/**\n * userData type defenition:\n * @typedef {Object} userData\n * @property {string} name - Username.\n * @property {string} about - User description.\n * @property {string} avatar - Link for user's avatar.\n * @property {string} cohort - User's cohort.\n * @property {string} _id - User ID.\n *\n * cardData type defenition:\n * @typedef {Object} cardData\n * @property {string} _id - Card ID.\n * @property {string} createdAt - Time of creation.\n * @property {Array<userData>} likes - An array of IDs of users whom liked the card.\n * @property {string} link - Link to card image.\n * @property {string} name - Card title.\n * @property {userData} owner - User data of card's owner.\n *\n * Card Props type defenition:\n * @typedef {Object} CardProps - props for Card\n * @property {cardData} data - Card data\n * @property {Function} onCardClick - Opens image popup on click.\n * @property {Function} onCardLike - Handles like button click.\n * @property {Function} onCardDelete - Handles card delete\n */\n/**\n * Card JSX component\n * @param {CardProps} props - props object\n */\n\nfunction Card({data, onCardClick, onCardLike, onCardDelete}) {\n  const {_id: id} = useContext(CurrentUserContext);\n\n  const isOwn = id===data.owner._id;\n  const isLiked = data.likes.some(like=>like._id===id);\n  return (\n    <li className=\"card\">\n        {isOwn ? <button className=\"card__delete-button\" type=\"button\" aria-label=\"delete\" onClick={()=>onCardDelete(data)}></button> : ''}\n        <img className=\"card__image\" src={data.link} alt={data.name} onClick={() => onCardClick(data)} />\n        <div className=\"card__panel\">\n          <h2 className=\"card__title\">{data.name}</h2>\n          <div className=\"card__like\">\n            <button className={`card__like-button ${isLiked ? 'card__like-button_active' : ''}`} type=\"button\" aria-label=\"Like\" onClick={() => onCardLike(data)}></button>\n            <p className=\"card__like-counter\">{data.likes.length}</p>\n          </div>\n        </div>\n      </li>\n  );\n}\n\nexport default Card;\n","export default __webpack_public_path__ + \"static/media/profile__image.453c0ae5.jpg\";","import React from 'react';\nimport Card from './Card';\n\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nimport avatarImage from '../images/profile__image.jpg';\n\n/**\n * cardData type defenition:\n * @typedef {Object} cardData\n * @property {string} _id - Card ID.\n * @property {string} createdAt - Time of creation.\n * @property {Array<string>} likes - An array of IDs of users whom liked the card.\n * @property {string} link - Link to card image.\n * @property {string} name - Card title.\n * @property {userData} owner - User data of card's owner.\n */\n\n/**\n * Main section component.\n * @param {{onEditProfileClick: Function, onAddPlaceClick: Function, onEditAvatarClick: Function, onCardClick: Function, onCardLike: Function, onCardDelete: Function cardsList: Array<cardData>}} props - Props object.\n * @returns {JSX.Element} Main JSX component.\n */\nfunction Main({ onEditProfileClick, onAddPlaceClick, onEditAvatarClick, onCardClick, onCardLike, onCardDelete, cardsList }) {\n  const {name, avatar, about} = React.useContext(CurrentUserContext);\n\n  return (\n    <main className=\"main\">\n      <section className=\"profile\">\n        <button className=\"profile__avatar\" type=\"button\" onClick={onEditAvatarClick}>\n          <img className=\"profile__image\" src={avatar ? avatar : avatarImage } alt=\"profile\" />\n        </button>\n        <div className=\"profile__info\">\n          <h1 className=\"profile__name\">{name ? name : 'Please be patient'}</h1>\n          <button className=\"profile__edit-button\" type=\"button\" aria-label=\"Edit profile\" onClick={onEditProfileClick} />\n          <p className=\"profile__bio\">{about ? about : 'We are fetching your user info...'}</p>\n        </div>\n        <button className=\"profile__add-button\"  type=\"button\" aria-label=\"Add an item\" onClick={onAddPlaceClick} />\n      </section>\n      <section className=\"gallery\">\n        <ul className=\"gallery__container\">\n          {cardsList.map(card => (<Card data={card} onCardClick={onCardClick} onCardLike={onCardLike} onCardDelete={onCardDelete} key={card._id} />))}\n        </ul>\n      </section>\n    </main>\n  );\n}\n\nexport default Main;\n","function Footer() {\n  return (\n    <footer className=\"footer\">\n      <p className=\"footer__copyrighs\">&#169; 2021 Around The U.S.</p>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React from \"react\";\n\n/**\n * Popup with form component.\n * @param {{title: string, name: string, buttonText: string, isOpen: boolean, onClose: Function, onSubmit: Function}} props - Props object.\n * @returns {JSX.Element} Popup With Form JSX component.\n */\nfunction PopupWithForm(props) {\n  const { title, name, buttonText, isOpen, onClose, onSubmit } = props;\n\n  const [currentButtonText,setCurrentButtonText] = React.useState(buttonText);\n\n  function handleSubmit(e){\n    e.preventDefault();\n\n    setCurrentButtonText('Saving...')\n    onSubmit()\n    .then(() => setCurrentButtonText(buttonText));\n  }\n\n  const handleOverlayClose = (e) => {\n    if(e.target.classList.contains('popup_visible'))\n      onClose();\n  };\n\n  return (\n    <div className={`popup popup_name_${name} ${isOpen ? 'popup_visible' : ''}`} onClick={handleOverlayClose}>\n      <div className=\"popup__container\">\n        <button className=\"popup__close-button popup__close-button_shrink\" type=\"button\" aria-label=\"close\" onClick={onClose} />\n        <h2 className=\"popup__title\">{title}</h2>\n        <form className={`form form_name_${name}`} name={name} onSubmit={handleSubmit} >\n          {props.children}\n          <button className=\"form__save-button\" type=\"submit\">{currentButtonText}</button>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default PopupWithForm;\n","import { useState, useContext, useEffect } from \"react\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\n\n/**\n * @typedef {Object} EditProfileProps\n * @property {string} title - Form title\n * @property {string} name - Form name\n * @property {string} buttonText - Button text\n * @property {boolean} isOpen - Is the popup open\n * @property {Function} onClose - Function to close the popup\n * @property {Function} onSubmit - Function to handle the form data\n */\n\n/**\n *\n * @param {EditProfileProps} props - JSX props.\n * @returns\n */\nfunction EditProfilePopup({ title, name: formName, buttonText, isOpen, onClose, onSubmit }){\n  const {name: currentName, about: currentAbout} = useContext(CurrentUserContext);\n\n  const [name, setName] = useState(currentName);\n  const [about, setAbout] = useState(currentAbout);\n\n  function onInputChange(e){\n    if(e.target.name==='name')\n      setName(e.target.value);\n    else\n      setAbout(e.target.value);\n  }\n\n  function editProfileSubmit(){\n    return onSubmit({name, about});\n  }\n\n  useEffect(()=>{\n    setAbout(currentAbout);\n    setName(currentName);\n  },[currentName,currentAbout,isOpen]);\n\n  return (\n    <PopupWithForm title={title} name={formName} buttonText={buttonText} isOpen={isOpen} onClose={onClose} onSubmit={editProfileSubmit} >\n      <label className=\"form__field\">\n          <input id=\"input_name\" className=\"form__input form__input_type_name\" value={name} type=\"text\" name=\"name\" placeholder=\"Name\" minLength=\"2\" maxLength=\"40\" required onChange={onInputChange} />\n          <span id=\"input_name-error\" className=\"form__input-error\"></span>\n        </label>\n        <label className=\"form__field\">\n          <input id=\"input_bio\" className=\"form__input form__input_type_bio\" value={about} type=\"text\" name=\"bio\" placeholder=\"About me\" minLength=\"2\" maxLength=\"200\" required onChange={onInputChange} />\n          <span id=\"input_bio-error\" className=\"form__input-error\"></span>\n        </label>\n    </PopupWithForm>\n  );\n}\n\nexport default EditProfilePopup;\n","import { useRef, useState, useEffect } from \"react\";\nimport PopupWithForm from \"./PopupWithForm\";\n\n/**\n * @typedef {Object} EditAvatarProps\n * @property {string} title - Form title\n * @property {string} name - Form name\n * @property {string} buttonText - Button text\n * @property {boolean} isOpen - Is the popup open\n * @property {Function} onClose - Function to close the popup\n * @property {Function} onSubmit - Function to handle the form data\n */\n\n/**\n *\n * @param {EditAvatarProps} props - JSX props.\n * @returns\n */\nfunction EditAvatarPopup({ title, name: formName, buttonText, isOpen, onClose, onSubmit }){\n  const [link, setLink] = useState('');\n\n  const inputRef = useRef();\n\n  function onInputChange(e){\n    setLink(inputRef.current.value);\n  }\n\n  function editAvatarSubmit(){\n    return onSubmit(link);\n  }\n\n  useEffect(()=>{\n\n  },[isOpen]);\n\n  return (\n    <PopupWithForm title={title} name={formName} buttonText={buttonText} isOpen={isOpen} onClose={onClose} onSubmit={editAvatarSubmit} >\n      <label className=\"form__field\">\n        <input id=\"input_url\" className=\"form__input form__input_type_url\" ref={inputRef} type=\"url\" name=\"url\" placeholder=\"Image URL\" required onChange={onInputChange} />\n        <span id=\"input_url-error\" className=\"form__input-error\"></span>\n      </label>\n    </PopupWithForm>\n  );\n}\n\nexport default EditAvatarPopup;\n","import { useState, useEffect } from \"react\";\nimport PopupWithForm from \"./PopupWithForm\";\n\n/**\n * @typedef {Object} AddPlaceProps\n * @property {string} title - Form title\n * @property {string} name - Form name\n * @property {string} buttonText - Button text\n * @property {boolean} isOpen - Is the popup open\n * @property {Function} onClose - Function to close the popup\n * @property {Function} onSubmit - Function to handle the form data\n */\n\n/**\n *\n * @param {AddPlaceProps} props - JSX props\n * @returns\n */\nfunction AddPlacePopup({ title, name: formName, buttonText, isOpen, onClose, onSubmit }) {\n\n  const [name, setName] = useState('');\n  const [link, setLink] = useState('');\n\n  function handleChange(e){\n    if(e.target.name==='title')\n      setName(e.target.value);\n    else\n      setLink(e.target.value);\n  }\n\n  function newPlaceSubmit(){\n    return onSubmit({name, link});\n  }\n\n  useEffect(() => {\n    setName('');\n    setLink('');\n  }, [isOpen]);\n\n  return (\n    <PopupWithForm title={title} name={formName} buttonText={buttonText} isOpen={isOpen} onClose={onClose} onSubmit={newPlaceSubmit} >\n        <label className=\"form__field\">\n          <input id=\"input_title\" className=\"form__input form__input_type_title\" value={name} type=\"text\" name=\"title\" placeholder=\"Title\" minLength=\"1\" maxLength=\"30\" required onChange={handleChange} />\n          <span id=\"input_title-error\" className=\"form__input-error\"></span>\n        </label>\n        <label className=\"form__field\">\n          <input id=\"input_link\" className=\"form__input form__input_type_link\" value={link} type=\"url\" name=\"link\" placeholder=\"Image link\" required onChange={handleChange} />\n          <span id=\"input_link-error\" className=\"form__input-error\"></span>\n        </label>\n      </PopupWithForm>\n  );\n}\n\nexport default AddPlacePopup;\n","/**\n * Popup with image component.\n * @param {{card: {_id: string, createdAt: string, likes: Array<string>, link: string, name: string, owner: {name: string, about: string, avatar: string, cohort: string, _id: string}, onClose: Function}}} props - Props object.\n * @returns {JSX.Element} Image Popup JSX component.\n */\nfunction ImagePopup(props) {\n  const {card, onClose} = props;\n\n  const handleOverlayClose = (e) => {\n    if(e.target.classList.contains('popup_visible'))\n      onClose();\n  };\n\n  return (\n    <div className={`popup popup_name_picture ${card.link ? 'popup_visible' : ''}`} onClick={handleOverlayClose}>\n      <div className=\"popup__picture-container\">\n        <button className=\"popup__close-button\" type=\"button\" aria-label=\"close\" onClick={onClose} />\n        <img className=\"popup__picture\" src={card.link} alt={card.name} />\n        <h2 className=\"popup__picture-title\">{card.name}</h2>\n      </div>\n    </div>\n  );\n}\n\nexport default ImagePopup;\n","/**\n * Api utility for Around the USA app.\n *\n *\n * userData type defenition:\n * @typedef {Object} userData\n * @property {string} name - Username.\n * @property {string} about - User description.\n * @property {string} avatar - Link for user's avatar.\n * @property {string} cohort - User's cohort.\n * @property {string} _id - User ID.\n *\n * cardData type defenition:\n * @typedef {Object} cardData\n * @property {string} _id - Card ID.\n * @property {string} createdAt - Time of creation.\n * @property {Array<userData>} likes - An array of IDs of users whom liked the card.\n * @property {string} link - Link to card image.\n * @property {string} name - Card title.\n * @property {userData} owner - User data of card's owner.\n */\n\n class Api {\n  /**\n   * Constructor function for the Api class.\n   * @param {{host: string, authorization: string}} param0 - Options object with a base url and a token for the server.\n   */\n  constructor({host, authorization}) {\n    this._host = host;\n    this._headers = { authorization }\n    this.userId = undefined;\n  }\n  /**\n   * A private method for handling a respones from server.\n   * @private\n   * @param {*} res\n   * @returns {Promise<*>}\n   */\n  _handleResponse(res){\n    if(res.ok)\n      return res.json();\n    return Promise.reject(`error: ${res.status}, ${res.statusText}`);\n  }\n  /**\n   * Fetching user data from the server\n   * @param {string} [id='me'] - Optional (default is own user)\n   * @returns {Promise<userData>} - User data.\n   */\n  getUserInfo(id='me'){\n    return fetch(`${this._host}/users/${id}`,{headers: this._headers})\n    .then(this._handleResponse)\n    .then(data => {\n      this.userId = data._id;\n      return data;\n    });\n  }\n  /**\n   * Setting a new avatar with a PATCH request to server.\n   * @param {string} avatar - Image link.\n   * @returns {Promise<userData>} - User data {name, about, avatar, cohort, _id}\n   */\n  updateUserAvatar(avatar){\n    return fetch(`${this._host}/users/me/avatar`,{\n      method: 'PATCH',\n      headers: {\n        ...this._headers,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        avatar\n      })})\n    .then(this._handleResponse);\n  }\n  /**\n   * Setting new user name and description.\n   * @param {{name: string, about: string}} param0 - An object with username and description.\n   * @returns {Promise<userData>} - User data {name, about, avatar, cohort, _id}\n   */\n   updateUser({name,about}){\n    return fetch(`${this._host}/users/me`,{\n      method: 'PATCH',\n      headers: {\n        ...this._headers,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        name,\n        about\n      })})\n    .then(this._handleResponse);\n  }\n  /**\n   * Fetching a list of cards from the server.\n   * @returns {Promise<Array<cardData>>} - A promise for an array of card data.\n   */\n  getCards(){\n    return fetch(`${this._host}/cards`,{headers: this._headers})\n    .then(this._handleResponse);\n  }\n  /**\n   * Adding a new card to the server.\n   * @param {{name: string, link: string}} param0\n   * @returns {Promise<cardData>} - Card data.\n   */\n  addCard({name,link}){\n    return fetch(`${this._host}/cards`,{\n      method: 'POST',\n      headers: {\n        ...this._headers,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        name,\n        link\n      })})\n    .then(this._handleResponse);\n  }\n  /**\n   * Delete a card form the server.\n   * @param {string} id - Card id.\n   * @returns {Promise<undefined>}\n   */\n  deleteCard(id){\n    return fetch(`${this._host}/cards/${id}`, {method: 'DELETE', headers: this._headers})\n    .then(this._handleResponse);\n  }\n  /**\n   * Add like to a card\n   * @param {string} id - card id\n   * @returns {Promise<cardData>} - Card data.\n   */\n  addLike(id){\n    return fetch(`${this._host}/cards/likes/${id}`, {method: 'PUT', headers: this._headers})\n    .then(this._handleResponse);\n  }\n  /**\n   * Remove like from a card\n   * @param {string} id - card id\n   * @returns {Promise<cardData>} - Card data.\n   */\n  removeLike(id){\n    return fetch(`${this._host}/cards/likes/${id}`, {method: 'DELETE', headers: this._headers})\n    .then(this._handleResponse);\n  }\n}\n\nconst api = new Api({host: 'https://around.nomoreparties.co/v1/group-12', authorization:'9dcb4203-ec5d-4132-a4af-e260b13cb4d2'});\n\nexport default api;\n","import React from \"react\";\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport ImagePopup from \"./ImagePopup\";\n\nimport api from '../utils/api';\n\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction App() {\n\n  const [currentUser, setCurrentUser] = React.useState({name: '', about: ''});\n  const [cards, setCards] = React.useState([]);\n\n  /*\n    Popups state\n  */\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [confirmPopupState, setConfirmPopupState] = React.useState({isOpen: false, cardId: ''});\n\n  const [selectedCard, setSelectedCard] = React.useState({});\n\n  const closeAllPopups = () => {\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setSelectedCard({});\n  };\n\n  React.useEffect(() => {\n    const handleEscapeClose = (e) => {\n      if(e.key==='Escape')\n        closeAllPopups();\n    }\n\n    document.addEventListener('keydown', handleEscapeClose);\n\n    return () => document.removeEventListener('keydown', handleEscapeClose);\n    }, []);\n\n  /*\n    Page's buttons click handlers\n  */\n  const onEditProfileClick = () => setIsEditProfilePopupOpen(true);\n  const onAddPlaceClick = () => setIsAddPlacePopupOpen(true);\n  const onEditAvatarClick = () => setIsEditAvatarPopupOpen(true);\n\n  /*\n    Form data functions\n  */\n /**\n  * Update profile info\n  * @param {{name: string, about: string}} param0\n  * @returns Promise\n  */\n  function onProfileSubmit({name,about}){\n    return api.updateUser({name,about})\n    .then(updateUserInfo)\n    .then(() => setIsEditProfilePopupOpen(false))\n    .catch(e=>console.log(e));\n  }\n/**\n * Add a new card\n * @param {{name: string, link: string}} param0\n * @returns Promise\n */\n  function onPlaceSubmit({name, link}){\n    return api.addCard({name, link})\n    .then(updateCards)\n    .then(() => setIsAddPlacePopupOpen(false))\n    .catch(e=>console.log(e));\n  }\n/**\n * Set a new avatar\n * @param {string} link\n * @returns Promise\n */\n  function onAvatarSubmit(link){\n    return api.updateUserAvatar(link)\n    .then(updateUserInfo)\n    .then(() => setIsEditAvatarPopupOpen(false))\n    .catch(e=>console.log(e));\n  }\n/**\n * Confirmation dialog to delete a card\n * @returns Promise\n */\n  function onConfirmSubmit(){\n    return api.deleteCard(confirmPopupState.cardId)\n    .then(updateCards)\n    .then(() => setConfirmPopupState({isOpen: false, cardId: ''}))\n    .catch(e=>console.log(e));\n  }\n\n  /*\n    Card functions\n  */\n  const onCardClick = (card) => setSelectedCard(card);\n  const onCardLike = (card) => {\n      if(card.likes.some(like=>like._id===currentUser._id)) return api.removeLike(card._id)\n      .then(updateCards)\n      .catch(e=>console.log(e));\n      return api.addLike(card._id)\n      .then(updateCards)\n      .catch(e=>console.log(e));\n  }\n  const onCardDelete = (card) => {\n    setConfirmPopupState({isOpen: true, cardId: card._id});\n  }\n\n  /*\n    Api calls\n  */\n  function updateCards(){\n    return api.getCards()\n    .then(data=> setCards(data))\n    .catch(e=>console.log(e));\n  }\n\n  function updateUserInfo(){\n    return api.getUserInfo()\n    .then(data => setCurrentUser(data))\n    .catch(e=>console.log(e));\n  }\n\n  React.useEffect(() => {\n    updateUserInfo()\n    .then(updateCards)\n    .catch(e=>console.log(e));\n  },[]);\n\n  return (\n    <>\n    <Header />\n\n    <CurrentUserContext.Provider value={currentUser}>\n      <Main onEditProfileClick={onEditProfileClick} onAddPlaceClick={onAddPlaceClick} onEditAvatarClick={onEditAvatarClick} onCardClick={onCardClick} onCardLike={onCardLike} onCardDelete={onCardDelete} cardsList={cards} />\n\n      <EditProfilePopup title=\"Edit profile\" name=\"edit-profile\" buttonText='Save' isOpen={isEditProfilePopupOpen} onClose={closeAllPopups} onSubmit={onProfileSubmit} />\n\n      <AddPlacePopup title=\"New Place\" name=\"new-place\" buttonText='Create' isOpen={isAddPlacePopupOpen} onClose={closeAllPopups} onSubmit={onPlaceSubmit} />\n\n      <EditAvatarPopup title=\"Change profile picture\" name=\"edit-avatar\" buttonText='Save' isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups} onSubmit={onAvatarSubmit} />\n\n      <PopupWithForm title=\"Are you sure?\" name=\"confirm\" buttonText='Yes' isOpen={confirmPopupState.isOpen} onClose={closeAllPopups} onSubmit={onConfirmSubmit} />\n\n      <ImagePopup card={selectedCard} onClose={closeAllPopups} />\n    </CurrentUserContext.Provider>\n\n    <Footer />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}