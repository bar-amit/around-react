{"version":3,"sources":["images/header__logo_large.svg","components/Header.js","utils/Api.js","components/Card.js","images/profile__image.jpg","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/ImagePopup.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","className","src","logo","alt","Api","host","authorization","this","_host","_headers","userId","undefined","res","ok","json","Promise","reject","status","statusText","id","fetch","headers","then","_handleResponse","data","_id","avatar","method","body","JSON","stringify","name","about","link","api","Card","onCardClick","onClick","type","likes","length","Main","props","onEditProfileClick","onAddPlaceClick","onEditAvatarClick","React","useState","userName","setUserName","userDecription","setUserDescription","userAvatar","setUserAvatar","cardList","setCardList","useEffect","getUserInfo","getCards","catch","e","console","log","map","card","Footer","PopupWithForm","title","buttonText","isOpen","onClose","target","classList","contains","children","ImagePopup","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","selectedCard","setSelectedCard","closeAllPopups","handleEscapeClose","key","document","addEventListener","removeEventListener","placeholder","minLength","maxLength","required","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3f9038ff.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/header__logo_large.4e8e0a1d.svg\";","import logo from '../images/header__logo_large.svg';\n\nfunction Header() {\n    return (\n        <header className=\"header\">\n            <img className=\"header__logo\" src={logo} alt='Around the U.S. logo' />\n        </header>\n    );\n}\n\nexport default Header;\n","/**\n * Api utility for Around the USA app.\n */\nclass Api {\n  /**\n   * Constructor function for the Api class.\n   * @param {{host: string, authorization: string}}} param0 - Options object with a base url and a token for the server.\n   */\n  constructor({host, authorization}) {\n    this._host = host;\n    this._headers = { authorization }\n    this.userId = undefined;\n  }\n  /**\n   * A private method for handling a respones from server.\n   * @param {*} res\n   * @returns {Promise<*>}\n   */\n  _handleResponse(res){\n    if(res.ok)\n      return res.json();\n    return Promise.reject(`error: ${res.status}, ${res.statusText}`);\n  }\n  /**\n   * Fetching user data from the server\n   * @param {string} id - Optional (default is own user)\n   * @returns {Promise<{name: string, about: string, avatar: string, cohort: string, _id: string}>} - User data {name, about, avatar, cohort, _id}\n   */\n  getUserInfo(id='me'){\n    return fetch(`${this._host}/users/${id}`,{headers: this._headers})\n    .then(this._handleResponse)\n    .then(data => {\n      this.userId = data._id;\n      return data;\n    });\n  }\n  /**\n   * Setting a new avatar with a PATCH request to server.\n   * @param {string} avatar - Image link.\n   * @returns {Promise<{name: string, about: string, avatar: string, cohort: string, _id: string}>} - User data {name, about, avatar, cohort, _id}\n   */\n  updateUserAvatar(avatar){\n    return fetch(`${this._host}/users/me/avatar`,{\n      method: 'PATCH',\n      headers: {\n        ...this._headers,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        avatar\n      })})\n    .then(this._handleResponse);\n  }\n  /**\n   * Fetching a list of cards from the server.\n   * @returns {Promise<Array<{_id: string, createdAt: string, likes: Array<string>, link: string, name: string, owner: {name: string, about: string, avatar: string, cohort: string, _id: string}}>>} - A promise for an array of card data.\n   */\n  getCards(){\n    return fetch(`${this._host}/cards`,{headers: this._headers})\n    .then(this._handleResponse);\n  }\n  /**\n   * Setting new user name and description.\n   * @param {{name: string, about: string}} param0 - An object with username and description.\n   * @returns {Promise<{name: string, about: string, avatar: string, cohort: string, _id: string}>} - User data {name, about, avatar, cohort, _id}\n   */\n  updateUser({name,about}){\n    return fetch(`${this._host}/users/me`,{\n      method: 'PATCH',\n      headers: {\n        ...this._headers,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        name,\n        about\n      })})\n    .then(this._handleResponse);\n  }\n  /**\n   * Adding a new card to the server.\n   * @param {{name: string, link: string}} param0\n   * @returns {Promise<{_id: string, createdAt: string, likes: Array<string>, link: string, name: string, owner: {name: string, about: string, avatar: string, cohort: string, _id: string}}>} - Card data.\n   */\n  addCard({name,link}){\n    return fetch(`${this._host}/cards`,{\n      method: 'POST',\n      headers: {\n        ...this._headers,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        name,\n        link\n      })})\n    .then(this._handleResponse);\n  }\n  /**\n   * Delete a card form the server.\n   * @param {string} id - Card id.\n   * @returns {Promise<undefined>}\n   */\n  deleteCard(id){\n    return fetch(`${this._host}/cards/${id}`, {method: 'DELETE', headers: this._headers})\n    .then(this._handleResponse);\n  }\n  /**\n   * Add like to a card\n   * @param {string} id - card id\n   * @returns {Promise<{_id: string, createdAt: string, likes: Array<string>, link: string, name: string, owner: {name: string, about: string, avatar: string, cohort: string, _id: string}}>} - Card data.\n   */\n  addLike(id){\n    return fetch(`${this._host}/cards/likes/${id}`, {method: 'PUT', headers: this._headers})\n    .then(this._handleResponse);\n  }\n  /**\n   * Remove like from a card\n   * @param {string} id - card id\n   * @returns {Promise<{_id: string, createdAt: string, likes: Array<string>, link: string, name: string, owner: {name: string, about: string, avatar: string, cohort: string, _id: string}}>} - Card data.\n   */\n  removeLike(id){\n    return fetch(`${this._host}/cards/likes/${id}`, {method: 'DELETE', headers: this._headers})\n    .then(this._handleResponse);\n  }\n}\n\nconst api = new Api({host: 'https://around.nomoreparties.co/v1/group-12', authorization:'9dcb4203-ec5d-4132-a4af-e260b13cb4d2'});\n\nexport default api;\n","function Card({data, onCardClick}) {\n  return (\n    <li className=\"card\">\n        {/* <button className=\"card__delete-button\" type=\"button\" aria-label=\"delete\"></button> */}\n        <img className=\"card__image\" src={data.link} alt={data.name} onClick={() => onCardClick(data)} />\n        <div className=\"card__panel\">\n          <h2 className=\"card__title\">{data.name}</h2>\n          <div className=\"card__like\">\n            <button className=\"card__like-button\" type=\"button\" aria-label=\"Like\"></button>\n            <p className=\"card__like-counter\">{data.likes.length}</p>\n          </div>\n        </div>\n      </li>\n  );\n}\n\nexport default Card;\n","export default __webpack_public_path__ + \"static/media/profile__image.453c0ae5.jpg\";","import React, { useEffect } from 'react';\nimport api from '../utils/Api';\nimport Card from './Card';\nimport avatar from '../images/profile__image.jpg';\n\n/**\n * Main section component.\n * @param {{onEditProfileClick: Function, onAddPlaceClick: Function, onEditAvatarClick: Function, onCardClick: Function}} props - Props object.\n * @returns {JSX.Element} Main JSX component.\n */\nfunction Main(props) {\n  const { onEditProfileClick, onAddPlaceClick, onEditAvatarClick, onCardClick } = props;\n\n  const [ userName, setUserName ] = React.useState(undefined);\n  const [ userDecription, setUserDescription ] = React.useState(undefined);\n  const [ userAvatar, setUserAvatar ] = React.useState(undefined);\n\n  const [ cardList, setCardList ] = React.useState([]);\n\n  useEffect(() => {\n    api.getUserInfo()\n    .then(data => {\n      setUserName(data.name);\n      setUserDescription(data.about);\n      setUserAvatar(data.avatar);\n    })\n    .then(() =>\n      api.getCards()\n      .then(data=>setCardList(data))\n      .catch(e=>console.log(e))\n    )\n    .catch(e=>console.log(e));\n  },[]);\n\n  return (\n    <main className=\"main\">\n      <section className=\"profile\">\n        <button className=\"profile__avatar\" type=\"button\" onClick={onEditAvatarClick}>\n          <img className=\"profile__image\" src={userAvatar ? userAvatar : avatar } alt=\"profile\" />\n        </button>\n        <div className=\"profile__info\">\n          <h1 className=\"profile__name\">{userName ? userName : 'Please be patient'}</h1>\n          <button className=\"profile__edit-button\" type=\"button\" aria-label=\"Edit profile\" onClick={onEditProfileClick} />\n          <p className=\"profile__bio\">{userDecription ? userDecription : 'We are fetching your user info...'}</p>\n        </div>\n        <button className=\"profile__add-button\"  type=\"button\" aria-label=\"Add an item\" onClick={onAddPlaceClick} />\n      </section>\n      <section className=\"gallery\">\n        <ul className=\"gallery__container\">\n          {cardList.map(card => (<Card data={card} onCardClick={onCardClick} key={card._id} />))}\n        </ul>\n      </section>\n    </main>\n  );\n}\n\nexport default Main;\n","function Footer() {\n  return (\n    <footer className=\"footer\">\n      <p className=\"footer__copyrighs\">&#169; 2021 Around The U.S.</p>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React from \"react\";\n\n/**\n * Popup with form component.\n * @param {{title: string, name: string, buttonText: string, isOpen: boolean, onClose: Function}} props - Props object.\n * @returns {JSX.Element} Popup With Form JSX component.\n */\nfunction PopupWithForm(props) {\n  const { title, name, buttonText, isOpen, onClose } = props;\n\n  const handleOverlayClose = (e) => {\n    if(e.target.classList.contains('popup_visible'))\n      onClose();\n  };\n\n  return (\n    <div className={`popup popup_name_${name} ${isOpen ? 'popup_visible' : ''}`} onClick={handleOverlayClose}>\n      <div className=\"popup__container\">\n        <button className=\"popup__close-button popup__close-button_shrink\" type=\"button\" aria-label=\"close\" onClick={onClose} />\n        <h2 className=\"popup__title\">{title}</h2>\n        <form className={`form form_name_${name}`} name={name} >\n          {props.children}\n          <button className=\"form__save-button form__save-button_disabled\" type=\"submit\">{buttonText}</button>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default PopupWithForm;\n","/**\n * Popup with image component.\n * @param {{card: {_id: string, createdAt: string, likes: Array<string>, link: string, name: string, owner: {name: string, about: string, avatar: string, cohort: string, _id: string}, onClose: Function}}} props - Props object.\n * @returns {JSX.Element} Image Popup JSX component.\n */\nfunction ImagePopup(props) {\n  const {card, onClose} = props;\n\n  const handleOverlayClose = (e) => {\n    if(e.target.classList.contains('popup_visible'))\n      onClose();\n  };\n\n  return (\n    <div className={`popup popup_name_picture ${card.link ? 'popup_visible' : ''}`} onClick={handleOverlayClose}>\n      <div className=\"popup__picture-container\">\n        <button className=\"popup__close-button\" type=\"button\" aria-label=\"close\" onClick={onClose} />\n        <img className=\"popup__picture\" src={card.link} alt={card.name} />\n        <h2 className=\"popup__picture-title\">{card.name}</h2>\n      </div>\n    </div>\n  );\n}\n\nexport default ImagePopup;\n","import React from \"react\";\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport ImagePopup from \"./ImagePopup\";\n\nfunction App() {\n\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n\n  const [selectedCard, setSelectedCard] = React.useState({});\n\n  const onEditProfileClick = () => setIsEditProfilePopupOpen(true);\n  const onAddPlaceClick = () => setIsAddPlacePopupOpen(true);\n  const onEditAvatarClick = () => setIsEditAvatarPopupOpen(true);\n  const onCardClick = (card) => setSelectedCard(card);\n\n  const closeAllPopups = () => {\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setSelectedCard({});\n  };\n\n  React.useEffect(() => {\n    const handleEscapeClose = (e) => {\n      if(e.key==='Escape')\n        closeAllPopups();\n    }\n\n    document.addEventListener('keydown', handleEscapeClose);\n\n    return () => document.removeEventListener('keydown', handleEscapeClose);\n    }, []);\n\n  return (\n    <>\n    <Header />\n    <Main onEditProfileClick={onEditProfileClick} onAddPlaceClick={onAddPlaceClick} onEditAvatarClick={onEditAvatarClick} onCardClick={onCardClick} />\n    <Footer />\n\n    <PopupWithForm title=\"Edit profile\" name=\"edit-profile\" buttonText='Save' isOpen={isEditProfilePopupOpen} onClose={closeAllPopups}>\n      <label className=\"form__field\">\n        <input id=\"input_name\" className=\"form__input form__input_type_name\" type=\"text\" name=\"name\" placeholder=\"Name\" minLength=\"2\" maxLength=\"40\" required />\n        <span id=\"input_name-error\" className=\"form__input-error\"></span>\n      </label>\n      <label className=\"form__field\">\n        <input id=\"input_bio\" className=\"form__input form__input_type_bio\" type=\"text\" name=\"bio\" placeholder=\"About me\" minLength=\"2\" maxLength=\"200\" required />\n        <span id=\"input_bio-error\" className=\"form__input-error\"></span>\n      </label>\n    </PopupWithForm>\n\n    <PopupWithForm title=\"New Place\" name=\"new-place\" buttonText='Create' isOpen={isAddPlacePopupOpen} onClose={closeAllPopups}>\n      <label className=\"form__field\">\n        <input id=\"input_title\" className=\"form__input form__input_type_title\" type=\"text\" name=\"title\" placeholder=\"Title\" minLength=\"1\" maxLength=\"30\" required />\n        <span id=\"input_title-error\" className=\"form__input-error\"></span>\n      </label>\n      <label className=\"form__field\">\n        <input id=\"input_link\" className=\"form__input form__input_type_link\" type=\"url\" name=\"link\" placeholder=\"Image link\" required />\n        <span id=\"input_link-error\" className=\"form__input-error\"></span>\n      </label>\n    </PopupWithForm>\n\n    <PopupWithForm title=\"Change profile picture\" name=\"edit-avatar\" buttonText='Save' isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups}>\n      <label className=\"form__field\">\n        <input id=\"input_url\" className=\"form__input form__input_type_url\" type=\"url\" name=\"url\" placeholder=\"Image URL\" required />\n        <span id=\"input_url-error\" className=\"form__input-error\"></span>\n      </label>\n    </PopupWithForm>\n\n    <PopupWithForm title=\"Are you sure?\" name=\"confirm\" buttonText='Yes' onClose={closeAllPopups}>\n    </PopupWithForm>\n\n    <ImagePopup card={selectedCard} onClose={closeAllPopups} />\n\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}