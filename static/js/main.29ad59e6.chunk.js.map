{"version":3,"sources":["images/header__logo_large.svg","components/Header.js","contexts/CurrentUserContext.js","components/Card.js","images/profile__image.jpg","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/ImagePopup.js","utils/api.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","className","src","logo","alt","CurrentUserContext","createContext","Card","data","onCardClick","onCardLike","onCardDelete","id","useContext","_id","isOwn","owner","isLiked","likes","some","like","type","onClick","link","name","length","Main","onEditProfileClick","onAddPlaceClick","onEditAvatarClick","cardsList","React","avatar","about","avatarImage","map","card","Footer","PopupWithForm","title","buttonText","isOpen","onClose","onSubmit","children","useState","currentButtonText","setCurrentButtonText","e","target","classList","contains","preventDefault","then","EditProfilePopup","formName","currentName","currentAbout","setName","setAbout","handleInputChange","value","useEffect","placeholder","minLength","maxLength","required","onChange","EditAvatarPopup","inputRef","useRef","current","ref","AddPlacePopup","setLink","handleChange","ImagePopup","Api","host","authorization","this","_host","_headers","userId","undefined","res","ok","json","Promise","reject","status","statusText","fetch","headers","_handleResponse","method","body","JSON","stringify","api","App","currentUser","setCurrentUser","cards","setCards","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","cardId","confirmPopupState","setConfirmPopupState","selectedCard","setSelectedCard","closeAllPopups","updateCards","getCards","catch","console","log","handleEscapeClose","key","document","addEventListener","removeEventListener","all","getUserInfo","Provider","removeLike","bind","addLike","updateUser","addCard","updateUserAvatar","deleteCard","filter","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.29ad59e6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/header__logo_large.4e8e0a1d.svg\";","import logo from \"../images/header__logo_large.svg\";\n\nfunction Header() {\n  return (\n    <header className=\"header\">\n      <img className=\"header__logo\" src={logo} alt=\"Around the U.S. logo\" />\n    </header>\n  );\n}\n\nexport default Header;\n","import { createContext } from \"react\";\n\nexport const CurrentUserContext = createContext();\n","import { useContext } from \"react\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\n\n/**\n * userData type defenition:\n * @typedef {Object} userData\n * @property {string} name - Username.\n * @property {string} about - User description.\n * @property {string} avatar - Link for user's avatar.\n * @property {string} cohort - User's cohort.\n * @property {string} _id - User ID.\n *\n * cardData type defenition:\n * @typedef {Object} cardData\n * @property {string} _id - Card ID.\n * @property {string} createdAt - Time of creation.\n * @property {Array<userData>} likes - An array of IDs of users whom liked the card.\n * @property {string} link - Link to card image.\n * @property {string} name - Card title.\n * @property {userData} owner - User data of card's owner.\n *\n * Card Props type defenition:\n * @typedef {Object} CardProps - props for Card\n * @property {cardData} data - Card data\n * @property {Function} onCardClick - Opens image popup on click.\n * @property {Function} onCardLike - Handles like button click.\n * @property {Function} onCardDelete - Handles card delete\n */\n/**\n * Card JSX component\n * @param {CardProps} props - props object\n */\n\nfunction Card({ data, onCardClick, onCardLike, onCardDelete }) {\n  const { _id: id } = useContext(CurrentUserContext);\n\n  const isOwn = id === data.owner._id;\n  const isLiked = data.likes.some((like) => like._id === id);\n\n  return (\n    <li className=\"card\">\n      {isOwn ? (\n        <button\n          className=\"card__delete-button\"\n          type=\"button\"\n          aria-label=\"delete\"\n          onClick={() => onCardDelete(data)}\n        ></button>\n      ) : (\n        \"\"\n      )}\n      <img\n        className=\"card__image\"\n        src={data.link}\n        alt={data.name}\n        onClick={() => onCardClick(data)}\n      />\n      <div className=\"card__panel\">\n        <h2 className=\"card__title\">{data.name}</h2>\n        <div className=\"card__like\">\n          <button\n            className={`card__like-button ${\n              isLiked ? \"card__like-button_active\" : \"\"\n            }`}\n            type=\"button\"\n            aria-label=\"Like\"\n            onClick={() => onCardLike(data)}\n          />\n          <p className=\"card__like-counter\">{data.likes.length}</p>\n        </div>\n      </div>\n    </li>\n  );\n}\n\nexport default Card;\n","export default __webpack_public_path__ + \"static/media/profile__image.453c0ae5.jpg\";","import React from \"react\";\nimport Card from \"./Card\";\n\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\n\nimport avatarImage from \"../images/profile__image.jpg\";\n\n/**\n * cardData type defenition:\n * @typedef {Object} cardData\n * @property {string} _id - Card ID.\n * @property {string} createdAt - Time of creation.\n * @property {Array<string>} likes - An array of IDs of users whom liked the card.\n * @property {string} link - Link to card image.\n * @property {string} name - Card title.\n * @property {userData} owner - User data of card's owner.\n */\n\n/**\n * Main section component.\n * @param {{onEditProfileClick: Function, onAddPlaceClick: Function, onEditAvatarClick: Function, onCardClick: Function, onCardLike: Function, onCardDelete: Function cardsList: Array<cardData>}} props - Props object.\n * @returns {JSX.Element} Main JSX component.\n */\nfunction Main({\n  onEditProfileClick,\n  onAddPlaceClick,\n  onEditAvatarClick,\n  onCardClick,\n  onCardLike,\n  onCardDelete,\n  cardsList,\n}) {\n  const { name, avatar, about } = React.useContext(CurrentUserContext);\n\n  return (\n    <main className=\"main\">\n      <section className=\"profile\">\n        <button\n          className=\"profile__avatar\"\n          type=\"button\"\n          onClick={onEditAvatarClick}\n        >\n          <img\n            className=\"profile__image\"\n            src={avatar ? avatar : avatarImage}\n            alt=\"profile\"\n          />\n        </button>\n        <div className=\"profile__info\">\n          <h1 className=\"profile__name\">{name ? name : \"Please be patient\"}</h1>\n          <button\n            className=\"profile__edit-button\"\n            type=\"button\"\n            aria-label=\"Edit profile\"\n            onClick={onEditProfileClick}\n          />\n          <p className=\"profile__bio\">\n            {about ? about : \"We are fetching your user info...\"}\n          </p>\n        </div>\n        <button\n          className=\"profile__add-button\"\n          type=\"button\"\n          aria-label=\"Add an item\"\n          onClick={onAddPlaceClick}\n        />\n      </section>\n      <section className=\"gallery\">\n        <ul className=\"gallery__container\">\n          {cardsList.map((card) => (\n            <Card\n              data={card}\n              onCardClick={onCardClick}\n              onCardLike={onCardLike}\n              onCardDelete={onCardDelete}\n              key={card._id}\n            />\n          ))}\n        </ul>\n      </section>\n    </main>\n  );\n}\n\nexport default Main;\n","function Footer() {\n  return (\n    <footer className=\"footer\">\n      <p className=\"footer__copyrighs\">&#169; 2021 Around The U.S.</p>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React from \"react\";\n\n/**\n * Popup with form component.\n * @param {{title: string, name: string, buttonText: string, isOpen: boolean, onClose: Function, onSubmit: Function, children: JSX.Element[]}} props - Props object.\n * @returns {JSX.Element} Popup With Form JSX component.\n */\nfunction PopupWithForm({\n  title,\n  name,\n  buttonText,\n  isOpen,\n  onClose,\n  onSubmit,\n  children,\n}) {\n  const [currentButtonText, setCurrentButtonText] = React.useState(buttonText);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    setCurrentButtonText(\"Saving...\");\n    onSubmit().then(() => setCurrentButtonText(buttonText));\n  }\n\n  const handleOverlayClose = (e) => {\n    if (e.target.classList.contains(\"popup_visible\")) onClose();\n  };\n\n  return (\n    <div\n      className={`popup popup_name_${name} ${isOpen ? \"popup_visible\" : \"\"}`}\n      onClick={handleOverlayClose}\n    >\n      <div className=\"popup__container\">\n        <button\n          className=\"popup__close-button popup__close-button_shrink\"\n          type=\"button\"\n          aria-label=\"close\"\n          onClick={onClose}\n        />\n        <h2 className=\"popup__title\">{title}</h2>\n        <form\n          className={`form form_name_${name}`}\n          name={name}\n          onSubmit={handleSubmit}\n        >\n          {children}\n          <button className=\"form__save-button\" type=\"submit\">\n            {currentButtonText}\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default PopupWithForm;\n","import { useState, useContext, useEffect } from \"react\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\n\n/**\n * @typedef {Object} EditProfileProps\n * @property {string} title - Form title\n * @property {string} name - Form name\n * @property {string} buttonText - Button text\n * @property {boolean} isOpen - Is the popup open\n * @property {Function} onClose - Function to close the popup\n * @property {Function} onSubmit - Function to handle the form data\n */\n\n/**\n *\n * @param {EditProfileProps} props - JSX props.\n * @returns\n */\nfunction EditProfilePopup({\n  title,\n  name: formName,\n  buttonText,\n  isOpen,\n  onClose,\n  onSubmit,\n}) {\n  const { name: currentName, about: currentAbout } =\n    useContext(CurrentUserContext);\n\n  const [name, setName] = useState(currentName);\n  const [about, setAbout] = useState(currentAbout);\n\n  function handleInputChange(e) {\n    if (e.target.name === \"name\") setName(e.target.value);\n    else setAbout(e.target.value);\n  }\n\n  function handleEditProfileSubmit() {\n    return onSubmit({ name, about });\n  }\n\n  useEffect(() => {\n    setAbout(currentAbout);\n    setName(currentName);\n  }, [currentName, currentAbout, isOpen]);\n\n  return (\n    <PopupWithForm\n      title={title}\n      name={formName}\n      buttonText={buttonText}\n      isOpen={isOpen}\n      onClose={onClose}\n      onSubmit={handleEditProfileSubmit}\n    >\n      <label className=\"form__field\">\n        <input\n          id=\"input_name\"\n          className=\"form__input form__input_type_name\"\n          value={name}\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Name\"\n          minLength=\"2\"\n          maxLength=\"40\"\n          required\n          onChange={handleInputChange}\n        />\n        <span id=\"input_name-error\" className=\"form__input-error\"></span>\n      </label>\n      <label className=\"form__field\">\n        <input\n          id=\"input_bio\"\n          className=\"form__input form__input_type_bio\"\n          value={about}\n          type=\"text\"\n          name=\"bio\"\n          placeholder=\"About me\"\n          minLength=\"2\"\n          maxLength=\"200\"\n          required\n          onChange={handleInputChange}\n        />\n        <span id=\"input_bio-error\" className=\"form__input-error\"></span>\n      </label>\n    </PopupWithForm>\n  );\n}\n\nexport default EditProfilePopup;\n","import { useRef } from \"react\";\nimport PopupWithForm from \"./PopupWithForm\";\n\n/**\n * @typedef {Object} EditAvatarProps\n * @property {string} title - Form title\n * @property {string} name - Form name\n * @property {string} buttonText - Button text\n * @property {boolean} isOpen - Is the popup open\n * @property {Function} onClose - Function to close the popup\n * @property {Function} onSubmit - Function to handle the form data\n */\n\n/**\n *\n * @param {EditAvatarProps} props - JSX props.\n * @returns\n */\nfunction EditAvatarPopup({\n  title,\n  name: formName,\n  buttonText,\n  isOpen,\n  onClose,\n  onSubmit,\n}) {\n  const inputRef = useRef();\n\n  function handleEditAvatarSubmit() {\n    return onSubmit(inputRef.current.value);\n  }\n\n  return (\n    <PopupWithForm\n      title={title}\n      name={formName}\n      buttonText={buttonText}\n      isOpen={isOpen}\n      onClose={onClose}\n      onSubmit={handleEditAvatarSubmit}\n    >\n      <label className=\"form__field\">\n        <input\n          id=\"input_url\"\n          className=\"form__input form__input_type_url\"\n          ref={inputRef}\n          type=\"url\"\n          name=\"url\"\n          placeholder=\"Image URL\"\n          required\n        />\n        <span id=\"input_url-error\" className=\"form__input-error\"></span>\n      </label>\n    </PopupWithForm>\n  );\n}\n\nexport default EditAvatarPopup;\n","import { useState, useEffect } from \"react\";\nimport PopupWithForm from \"./PopupWithForm\";\n\n/**\n * @typedef {Object} AddPlaceProps\n * @property {string} title - Form title\n * @property {string} name - Form name\n * @property {string} buttonText - Button text\n * @property {boolean} isOpen - Is the popup open\n * @property {Function} onClose - Function to close the popup\n * @property {Function} onSubmit - Function to handle the form data\n */\n\n/**\n *\n * @param {AddPlaceProps} props - JSX props\n * @returns\n */\nfunction AddPlacePopup({\n  title,\n  name: formName,\n  buttonText,\n  isOpen,\n  onClose,\n  onSubmit,\n}) {\n  const [name, setName] = useState(\"\");\n  const [link, setLink] = useState(\"\");\n\n  function handleChange(e) {\n    if (e.target.name === \"title\") setName(e.target.value);\n    else setLink(e.target.value);\n  }\n\n  function handleNewPlaceSubmit() {\n    return onSubmit({ name, link });\n  }\n\n  useEffect(() => {\n    setName(\"\");\n    setLink(\"\");\n  }, [isOpen]);\n\n  return (\n    <PopupWithForm\n      title={title}\n      name={formName}\n      buttonText={buttonText}\n      isOpen={isOpen}\n      onClose={onClose}\n      onSubmit={handleNewPlaceSubmit}\n    >\n      <label className=\"form__field\">\n        <input\n          id=\"input_title\"\n          className=\"form__input form__input_type_title\"\n          value={name}\n          type=\"text\"\n          name=\"title\"\n          placeholder=\"Title\"\n          minLength=\"1\"\n          maxLength=\"30\"\n          required\n          onChange={handleChange}\n        />\n        <span id=\"input_title-error\" className=\"form__input-error\"></span>\n      </label>\n      <label className=\"form__field\">\n        <input\n          id=\"input_link\"\n          className=\"form__input form__input_type_link\"\n          value={link}\n          type=\"url\"\n          name=\"link\"\n          placeholder=\"Image link\"\n          required\n          onChange={handleChange}\n        />\n        <span id=\"input_link-error\" className=\"form__input-error\"></span>\n      </label>\n    </PopupWithForm>\n  );\n}\n\nexport default AddPlacePopup;\n","/**\n * Popup with image component.\n * @param {{card: {_id: string, createdAt: string, likes: Array<string>, link: string, name: string, owner: {name: string, about: string, avatar: string, cohort: string, _id: string}, onClose: Function}}} props - Props object.\n * @returns {JSX.Element} Image Popup JSX component.\n */\nfunction ImagePopup({ card, onClose }) {\n  const handleOverlayClose = (e) => {\n    if (e.target.classList.contains(\"popup_visible\")) onClose();\n  };\n\n  return (\n    <div\n      className={`popup popup_name_picture ${card.link ? \"popup_visible\" : \"\"}`}\n      onClick={handleOverlayClose}\n    >\n      <div className=\"popup__picture-container\">\n        <button\n          className=\"popup__close-button\"\n          type=\"button\"\n          aria-label=\"close\"\n          onClick={onClose}\n        />\n        <img className=\"popup__picture\" src={card.link} alt={card.name} />\n        <h2 className=\"popup__picture-title\">{card.name}</h2>\n      </div>\n    </div>\n  );\n}\n\nexport default ImagePopup;\n","/**\n * Api utility for Around the USA app.\n *\n *\n * userData type defenition:\n * @typedef {Object} userData\n * @property {string} name - Username.\n * @property {string} about - User description.\n * @property {string} avatar - Link for user's avatar.\n * @property {string} cohort - User's cohort.\n * @property {string} _id - User ID.\n *\n * cardData type defenition:\n * @typedef {Object} cardData\n * @property {string} _id - Card ID.\n * @property {string} createdAt - Time of creation.\n * @property {Array<userData>} likes - An array of IDs of users whom liked the card.\n * @property {string} link - Link to card image.\n * @property {string} name - Card title.\n * @property {userData} owner - User data of card's owner.\n */\n\nclass Api {\n  /**\n   * Constructor function for the Api class.\n   * @param {{host: string, authorization: string}} param0 - Options object with a base url and a token for the server.\n   */\n  constructor({ host, authorization }) {\n    this._host = host;\n    this._headers = { authorization };\n    this.userId = undefined;\n  }\n  /**\n   * A private method for handling a respones from server.\n   * @private\n   * @param {*} res\n   * @returns {Promise<*>}\n   */\n  _handleResponse(res) {\n    if (res.ok) return res.json();\n    return Promise.reject(`error: ${res.status}, ${res.statusText}`);\n  }\n  /**\n   * Fetching user data from the server\n   * @param {string} [id='me'] - Optional (default is own user)\n   * @returns {Promise<userData>} - User data.\n   */\n  getUserInfo(id = \"me\") {\n    return fetch(`${this._host}/users/${id}`, { headers: this._headers })\n      .then(this._handleResponse)\n      .then((data) => {\n        this.userId = data._id;\n        return data;\n      });\n  }\n  /**\n   * Setting a new avatar with a PATCH request to server.\n   * @param {string} avatar - Image link.\n   * @returns {Promise<userData>} - User data {name, about, avatar, cohort, _id}\n   */\n  updateUserAvatar(avatar) {\n    return fetch(`${this._host}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: {\n        ...this._headers,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        avatar,\n      }),\n    }).then(this._handleResponse);\n  }\n  /**\n   * Setting new user name and description.\n   * @param {{name: string, about: string}} param0 - An object with username and description.\n   * @returns {Promise<userData>} - User data {name, about, avatar, cohort, _id}\n   */\n  updateUser({ name, about }) {\n    return fetch(`${this._host}/users/me`, {\n      method: \"PATCH\",\n      headers: {\n        ...this._headers,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        name,\n        about,\n      }),\n    }).then(this._handleResponse);\n  }\n  /**\n   * Fetching a list of cards from the server.\n   * @returns {Promise<Array<cardData>>} - A promise for an array of card data.\n   */\n  getCards() {\n    return fetch(`${this._host}/cards`, { headers: this._headers }).then(\n      this._handleResponse\n    );\n  }\n  /**\n   * Adding a new card to the server.\n   * @param {{name: string, link: string}} param0\n   * @returns {Promise<cardData>} - Card data.\n   */\n  addCard({ name, link }) {\n    return fetch(`${this._host}/cards`, {\n      method: \"POST\",\n      headers: {\n        ...this._headers,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        name,\n        link,\n      }),\n    }).then(this._handleResponse);\n  }\n  /**\n   * Delete a card form the server.\n   * @param {string} id - Card id.\n   * @returns {Promise<undefined>}\n   */\n  deleteCard(id) {\n    return fetch(`${this._host}/cards/${id}`, {\n      method: \"DELETE\",\n      headers: this._headers,\n    }).then(this._handleResponse);\n  }\n  /**\n   * Add like to a card\n   * @param {string} id - card id\n   * @returns {Promise<cardData>} - Card data.\n   */\n  addLike(id) {\n    return fetch(`${this._host}/cards/likes/${id}`, {\n      method: \"PUT\",\n      headers: this._headers,\n    }).then(this._handleResponse);\n  }\n  /**\n   * Remove like from a card\n   * @param {string} id - card id\n   * @returns {Promise<cardData>} - Card data.\n   */\n  removeLike(id) {\n    return fetch(`${this._host}/cards/likes/${id}`, {\n      method: \"DELETE\",\n      headers: this._headers,\n    }).then(this._handleResponse);\n  }\n}\n\nconst api = new Api({\n  host: \"https://around.nomoreparties.co/v1/group-12\",\n  authorization: \"9dcb4203-ec5d-4132-a4af-e260b13cb4d2\",\n});\n\nexport default api;\n","import React from \"react\";\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport ImagePopup from \"./ImagePopup\";\n\nimport api from \"../utils/api\";\n\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\n\nfunction App() {\n  const [currentUser, setCurrentUser] = React.useState({\n    name: \"\",\n    about: \"\",\n    _id: \"\",\n  });\n  const [cards, setCards] = React.useState([]);\n\n  /*\n    Popups state\n  */\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] =\n    React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] =\n    React.useState(false);\n  const [confirmPopupState, setConfirmPopupState] = React.useState({\n    isOpen: false,\n    cardId: \"\",\n  });\n\n  const [selectedCard, setSelectedCard] = React.useState({});\n\n  const closeAllPopups = () => {\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setSelectedCard({});\n  };\n\n  React.useEffect(() => {\n    const handleEscapeClose = (e) => {\n      if (e.key === \"Escape\") closeAllPopups();\n    };\n\n    document.addEventListener(\"keydown\", handleEscapeClose);\n\n    return () => document.removeEventListener(\"keydown\", handleEscapeClose);\n  }, []);\n\n  /*\n    Page's buttons click handlers\n  */\n  const handleEditProfileClick = () => setIsEditProfilePopupOpen(true);\n  const handleAddPlaceClick = () => setIsAddPlacePopupOpen(true);\n  const handleEditAvatarClick = () => setIsEditAvatarPopupOpen(true);\n\n  /*\n    Form data functions\n  */\n  /**\n   * Update profile info\n   * @param {{name: string, about: string}} param0\n   * @returns Promise\n   */\n  function handlProfileSubmit({ name, about }) {\n    return api\n      .updateUser({ name, about })\n      .then(setCurrentUser)\n      .then(() => setIsEditProfilePopupOpen(false))\n      .catch((e) => console.log(e));\n  }\n  /**\n   * Add a new card\n   * @param {{name: string, link: string}} param0\n   * @returns Promise\n   */\n  function handlePlaceSubmit({ name, link }) {\n    return api\n      .addCard({ name, link })\n      .then((card) => setCards([card, ...cards]))\n      .then(() => setIsAddPlacePopupOpen(false))\n      .catch((e) => console.log(e));\n  }\n  /**\n   * Set a new avatar\n   * @param {string} link\n   * @returns Promise\n   */\n  function handleAvatarSubmit(link) {\n    return api\n      .updateUserAvatar(link)\n      .then(({ avatar }) => setCurrentUser({ ...currentUser, avatar }))\n      .then(() => setIsEditAvatarPopupOpen(false))\n      .catch((e) => console.log(e));\n  }\n  /**\n   * Confirmation dialog to delete a card\n   * @returns Promise\n   */\n  function handleConfirmSubmit() {\n    const id = confirmPopupState.cardId;\n    return api\n      .deleteCard(id)\n      .then(setCards(cards.filter((card) => card._id !== id)))\n      .then(() => setConfirmPopupState({ isOpen: false, cardId: \"\" }))\n      .catch((e) => console.log(e));\n  }\n\n  /*\n    Card functions\n  */\n  const handleCardClick = (card) => setSelectedCard(card);\n  const handleCardLike = (card) => {\n    const hasLike = card.likes.some((like) => like._id === currentUser._id);\n    const updateLikes = hasLike\n      ? api.removeLike.bind(api)\n      : api.addLike.bind(api);\n    updateLikes(card._id)\n      .then(updateCards)\n      .catch((e) => console.log(e));\n  };\n  const handleCardDelete = (card) => {\n    setConfirmPopupState({ isOpen: true, cardId: card._id });\n  };\n\n  /*\n    Api calls\n  */\n  function updateCards() {\n    return api\n      .getCards()\n      .then((data) => setCards(data))\n      .catch((e) => console.log(e));\n  }\n\n  function updateUserInfo() {\n    return api\n      .getUserInfo()\n      .then((data) => setCurrentUser(data))\n      .catch((e) => console.log(e));\n  }\n\n  React.useEffect(() => {\n    Promise.all([updateCards(), updateUserInfo()]).catch((e) => console.log(e));\n  }, []);\n\n  return (\n    <>\n      <Header />\n\n      <CurrentUserContext.Provider value={currentUser}>\n        <Main\n          onEditProfileClick={handleEditProfileClick}\n          onAddPlaceClick={handleAddPlaceClick}\n          onEditAvatarClick={handleEditAvatarClick}\n          onCardClick={handleCardClick}\n          onCardLike={handleCardLike}\n          onCardDelete={handleCardDelete}\n          cardsList={cards}\n        />\n\n        <EditProfilePopup\n          title=\"Edit profile\"\n          name=\"edit-profile\"\n          buttonText=\"Save\"\n          isOpen={isEditProfilePopupOpen}\n          onClose={closeAllPopups}\n          onSubmit={handlProfileSubmit}\n        />\n\n        <AddPlacePopup\n          title=\"New Place\"\n          name=\"new-place\"\n          buttonText=\"Create\"\n          isOpen={isAddPlacePopupOpen}\n          onClose={closeAllPopups}\n          onSubmit={handlePlaceSubmit}\n        />\n\n        <EditAvatarPopup\n          title=\"Change profile picture\"\n          name=\"edit-avatar\"\n          buttonText=\"Save\"\n          isOpen={isEditAvatarPopupOpen}\n          onClose={closeAllPopups}\n          onSubmit={handleAvatarSubmit}\n        />\n\n        <PopupWithForm\n          title=\"Are you sure?\"\n          name=\"confirm\"\n          buttonText=\"Yes\"\n          isOpen={confirmPopupState.isOpen}\n          onClose={closeAllPopups}\n          onSubmit={handleConfirmSubmit}\n        />\n\n        <ImagePopup card={selectedCard} onClose={closeAllPopups} />\n      </CurrentUserContext.Provider>\n\n      <Footer />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}